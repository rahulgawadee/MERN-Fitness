{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useAuthContext } from './useAuthContext';\nexport const uselogin = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    dispatch\n  } = useAuthContext();\n  const login = async (email, password) => {\n    if (!navigator.onLine) {\n      setError('You are currently offline. Please check your internet connection.');\n      return;\n    }\n\n    // Client-side validation\n    if (!email || !password) {\n      setError('Email and password are required.');\n      return;\n    }\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('/api/user/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const json = await response.json();\n      if (!response.ok) {\n        // Log the server response for debugging purposes\n        console.error('Server response:', json);\n        setIsLoading(false);\n        setError(json.error || 'An error occurred during signup.');\n        return;\n      }\n\n      // Save the user to local storage\n      localStorage.setItem('user', JSON.stringify(json));\n\n      // Update the auth context\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n\n      // Update loading state\n      setIsLoading(false);\n    } catch (err) {\n      setIsLoading(false);\n      setError('Failed to fetch: ' + err.message);\n    }\n  };\n  return {\n    login,\n    isLoading,\n    error\n  };\n};\n_s(uselogin, \"leglVsSbW4DJnC7nVdCyJFB0GD8=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","uselogin","_s","error","setError","isLoading","setIsLoading","dispatch","login","email","password","navigator","onLine","response","fetch","method","headers","body","JSON","stringify","json","ok","console","localStorage","setItem","type","payload","err","message"],"sources":["C:/Users/Rahul Gawade/OneDrive/Desktop/Rahul/Projects/MERN-Fitness-Site Part2/frontend/src/hooks/useLogin.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { useAuthContext } from './useAuthContext';\r\n\r\nexport const uselogin = () => {\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { dispatch } = useAuthContext();\r\n\r\n  const login = async (email, password) => {\r\n    if (!navigator.onLine) {\r\n      setError('You are currently offline. Please check your internet connection.');\r\n      return;\r\n    }\r\n\r\n    // Client-side validation\r\n    if (!email || !password) {\r\n      setError('Email and password are required.');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch('/api/user/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password })\r\n      });\r\n\r\n      const json = await response.json();\r\n\r\n      if (!response.ok) {\r\n        // Log the server response for debugging purposes\r\n        console.error('Server response:', json);\r\n        setIsLoading(false);\r\n        setError(json.error || 'An error occurred during signup.');\r\n        return;\r\n      }\r\n\r\n      // Save the user to local storage\r\n      localStorage.setItem('user', JSON.stringify(json));\r\n\r\n      // Update the auth context\r\n      dispatch({ type: 'LOGIN', payload: json });\r\n\r\n      // Update loading state\r\n      setIsLoading(false);\r\n\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      setError('Failed to fetch: ' + err.message);\r\n    }\r\n  };\r\n\r\n  return { login, isLoading, error };\r\n};\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM;IAAEQ;EAAS,CAAC,GAAGP,cAAc,CAAC,CAAC;EAErC,MAAMQ,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,IAAI,CAACC,SAAS,CAACC,MAAM,EAAE;MACrBR,QAAQ,CAAC,mEAAmE,CAAC;MAC7E;IACF;;IAEA;IACA,IAAI,CAACK,KAAK,IAAI,CAACC,QAAQ,EAAE;MACvBN,QAAQ,CAAC,kCAAkC,CAAC;MAC5C;IACF;IAEAE,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiB,EAAE;QAC9CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEV,KAAK;UAAEC;QAAS,CAAC;MAC1C,CAAC,CAAC;MAEF,MAAMU,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;MAElC,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;QAChB;QACAC,OAAO,CAACnB,KAAK,CAAC,kBAAkB,EAAEiB,IAAI,CAAC;QACvCd,YAAY,CAAC,KAAK,CAAC;QACnBF,QAAQ,CAACgB,IAAI,CAACjB,KAAK,IAAI,kCAAkC,CAAC;QAC1D;MACF;;MAEA;MACAoB,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEN,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;;MAElD;MACAb,QAAQ,CAAC;QAAEkB,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEN;MAAK,CAAC,CAAC;;MAE1C;MACAd,YAAY,CAAC,KAAK,CAAC;IAErB,CAAC,CAAC,OAAOqB,GAAG,EAAE;MACZrB,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAAC,mBAAmB,GAAGuB,GAAG,CAACC,OAAO,CAAC;IAC7C;EACF,CAAC;EAED,OAAO;IAAEpB,KAAK;IAAEH,SAAS;IAAEF;EAAM,CAAC;AACpC,CAAC;AAACD,EAAA,CArDWD,QAAQ;EAAA,QAGED,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}